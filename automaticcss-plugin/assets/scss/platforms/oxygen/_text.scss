// GENERATE TEXT COLOR CLASSES

@each $colorName, $colorSet in $colors {
  @each $colorName, $colorValue in $colorSet {
    .text--#{$colorName} {
      color: $colorValue;
    }
  }
}

@each $size, $extension in $sizeExtensions {
  .text--#{$extension} {
    @if $size == xs {
      @include map-get-fluid-text(xs);
    } @else if $size == s {
      @include map-get-fluid-text(s);
    } @else if $size == m {
      @include map-get-fluid-text(m);
    } @else if $size == l {
      @include map-get-fluid-text(l);
    } @else if $size == xl {
      @include map-get-fluid-text(xl);
    } @else if $size == xxl {
      @include map-get-fluid-text(xxl);
    }
  }
}

// Larger

@each $size, $extension in $sizeExtensions {
  .text--#{$extension}.text--larger {
    @if $size == xs {
      font-size: $text-xs-pure * $text-multiplier-min;
      font-size: fluidCalc(
        $text-xs-min * $text-multiplier-min,
        $text-xs-max * $text-multiplier
      );
      font-size: fluidClamp(
        $text-xs-min * $text-multiplier-min,
        $text-xs-max * $text-multiplier
      );
    } @else if $size == s {
      font-size: $text-s-pure * $text-multiplier-min;
      font-size: fluidCalc(
        $text-s-min * $text-multiplier-min,
        $text-s-max * $text-multiplier
      );
      font-size: fluidClamp(
        $text-s-min * $text-multiplier-min,
        $text-s-max * $text-multiplier
      );
    } @else if $size == m {
      font-size: $text-m-pure * $text-multiplier-min;
      font-size: fluidCalc(
        $text-m-min * $text-multiplier-min,
        $text-m-max * $text-multiplier
      );
      font-size: fluidClamp(
        $text-m-min * $text-multiplier-min,
        $text-m-max * $text-multiplier
      );
    } @else if $size == l {
      font-size: $text-l-pure * $text-multiplier-min;
      font-size: fluidCalc(
        $text-l-min * $text-multiplier-min,
        $text-l-max * $text-multiplier
      );
      font-size: fluidClamp(
        $text-l-min * $text-multiplier-min,
        $text-l-max * $text-multiplier
      );
    } @else if $size == xl {
      font-size: $text-xl-pure * $text-multiplier-min;
      font-size: fluidCalc(
        $text-xl-min * $text-multiplier-min,
        $text-xl-max * $text-multiplier
      );
      font-size: fluidClamp(
        $text-xl-min * $text-multiplier-min,
        $text-xl-max * $text-multiplier
      );
    } @else if $size == xxl {
      font-size: $text-xxl-pure * $text-multiplier-min;
      font-size: fluidCalc(
        $text-xxl-min * $text-multiplier-min,
        $text-xxl-max * $text-multiplier
      );
      font-size: fluidClamp(
        $text-xxl-min * $text-multiplier-min,
        $text-xxl-max * $text-multiplier
      );
    }
  }
}

// Text Larger

h1.text--larger {
  font-size: $text-xxl-pure * $text-multiplier-min;
  font-size: fluidCalc(
    $text-xxl-min * $text-multiplier-min,
    $text-xxl-max * $text-multiplier
  );
  font-size: fluidClamp(
    $text-xxl-min * $text-multiplier-min,
    $text-xxl-max * $text-multiplier
  );
}
h2.text--larger {
  font-size: $text-xl-pure * $text-multiplier-min;
  font-size: fluidCalc(
    $text-xl-min * $text-multiplier-min,
    $text-xl-max * $text-multiplier
  );
  font-size: fluidClamp(
    $text-xl-min * $text-multiplier-min,
    $text-xl-max * $text-multiplier
  );
}
h3.text--larger {
  font-size: $text-l-pure * $text-multiplier-min;
  font-size: fluidCalc(
    $text-l-min * $text-multiplier-min,
    $text-l-max * $text-multiplier
  );
  font-size: fluidClamp(
    $text-l-min * $text-multiplier-min,
    $text-l-max * $text-multiplier
  );
}
h4.text--larger {
  font-size: $text-m-pure * $text-multiplier-min;
  font-size: fluidCalc(
    $text-m-min * $text-multiplier-min,
    $text-m-max * $text-multiplier
  );
  font-size: fluidClamp(
    $text-m-min * $text-multiplier-min,
    $text-m-max * $text-multiplier
  );
}
h5.text--larger {
  font-size: $text-s-pure * $text-multiplier-min;
  font-size: fluidCalc(
    $text-s-min * $text-multiplier-min,
    $text-s-max * $text-multiplier
  );
  font-size: fluidClamp(
    $text-s-min * $text-multiplier-min,
    $text-s-max * $text-multiplier
  );
}
h6.text--larger {
  font-size: $text-xs-pure * $text-multiplier-min;
  font-size: fluidCalc(
    $text-xs-min * $text-multiplier-min,
    $text-xs-max * $text-multiplier
  );
  font-size: fluidClamp(
    $text-xs-min * $text-multiplier-min,
    $text-xs-max * $text-multiplier
  );
}

// Text Weights
// Also Found in Oxygen Overrides
@each $weight, $value in $textWeights {
  .text--#{$weight} {
    font-weight: $value;
  }
}

// Text Styles
// Also Found in Oxygen Overrides
@each $style, $value in $textStyles {
  .text--#{$style} {
    font-style: $value;
  }
}

// Text Decorations
// Also Found in Oxygen Overrides
@each $decoration, $value in $textDecorations {
  .text--#{$decoration} {
    -webkit-text-decoration: $value;
    text-decoration: $value;
  }
}

// Text Transforms
// Also Found in Oxygen Overrides
@each $transform, $value in $textTransforms {
  .text--#{$transform} {
    text-transform: $value;
  }
}

// Text Alignments
// Also Found in Oxygen Overrides
@each $alignment, $value in $textAlignments {
  .text--#{$alignment} {
    text-align: $value;
  }
}

// Text Weights

@each $weight, $value in $textWeights {
  .ct-span.text--#{$weight} {
    font-weight: $value;
  }
}

// Text Styles

@each $style, $value in $textStyles {
  .ct-span.text--#{$style} {
    font-style: $value;
  }
}

// Text Decorations

@each $decoration, $value in $textDecorations {
  .ct-span.text--#{$decoration} {
    -webkit-text-decoration: $value;
    text-decoration: $value;
  }
}

// Text Transforms

@each $transform, $value in $textTransforms {
  .ct-span.text--#{$transform} {
    text-transform: $value;
  }
}

// Text Alignments

@each $alignment, $value in $textAlignments {
  .ct-span.text--#{$alignment} {
    text-align: $value;
  }
}
